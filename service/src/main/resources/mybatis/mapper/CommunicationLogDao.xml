<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scrm.service.dao.CommunicationLogDao">
    <select id="queryCommunicationUser" resultType="com.scrm.service.entity.UserAndCommunication">
        select id, customer_name, customer_type, telephone, belong_company, customer_icon, enter_pool_date
        from se_customer
        where id = #{customerId}
    </select>

    <select id="querySingleCustomerRelation" resultType="com.scrm.service.entity.CustomerRelation">
        select * from se_customer_relationship
        where customer_id = #{customerId} and relation_type = replace(#{relationType}, '''', '')
    </select>

    <select id="queryCustomerRelation" resultType="com.scrm.service.entity.CustomerRelation">
        select * from se_customer_relationship
        where customer_id = #{customerId}
        order by relation_type
    </select>

    <select id="queryCustomerRelationDetail" resultType="com.scrm.service.entity.CustomerRelation">
        select * from se_customer_relationship
        where id = #{id}
    </select>

    <select id="queryCustomerRelationCount" resultType="Integer">
        select count(id) from se_customer_relationship
        where customer_id = #{customerId} and relation_type = replace(#{relationType}, '''', '')
    </select>

    <insert id="addCustomerRelation" parameterType="com.scrm.service.entity.CustomerRelation"
            keyProperty="id" useGeneratedKeys="true">
        insert into se_customer_relationship (customer_id, relation_type, relation_detail, communication_time)
        values(#{customerId}, #{relationType}, #{relationDetail}, #{communicationTime})
    </insert>

    <update id="editCustomerRelation" parameterType="com.scrm.service.entity.CustomerRelation">
        update se_customer_relationship set customer_id = #{customerId}, relation_type = #{relationType}, relation_detail = #{relationDetail}, communication_time = #{communicationTime}
        where id = #{id}
    </update>

    <delete id="deleteCustomerRelation">
        delete from se_customer_relationship where id = #{id}
    </delete>
</mapper>