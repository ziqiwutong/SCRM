<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scrm.service.dao.OrderDao">
    <resultMap id="cor1" type="java.util.LinkedHashMap">
        <result property="productName" column="product_name" />
        <result property="orderType" column="order_status" />
        <result property="productPrice" column="origin_price" />
        <result property="productBuyAmount" column="product_amount" />
        <result property="orderBuyer" column="customer_name" />
        <result property="orderStaff" column="order_staff" />
        <result property="productPic" column="product_image" />
        <result property="orderID" column="order_num" />
        <result property="notes" column="order_notes" />
        <result property="orderSource" column="order_source" />
        <result property="orderTime" column="create_time"/>
        <result property="orderFinish" column="pay_time" />
        <result property="priceChange" column="change_price" />
        <result property="receivedAmount" column="received_amount"/>
    </resultMap>

    <select id="queryOrder" resultMap="cor1">
        select `product_name` , d.origin_price,
        `product_amount`, `customer_name`, `product_image`, `order_num`
        from se_order,se_order_product as d
        where order_id=se_order.id
        <if test="orderType==-1">
            and `order_status`=-1
        </if>
        <if test="orderType==0">
            and `order_status`=0
        </if>
        <if test="orderType==1">
            and `order_status`=1
        </if>
        <if test="orderType==2">
            and `order_status`=2
        </if>
        <if test="orderType==3">
            and `order_status`=3
        </if>

        order by se_order.id asc
        <if test="pageNum != null and pageSize != null">
            limit ${(pageNum-1)*pageSize},#{pageSize}
        </if>
    </select>

    <select id="queryCount" resultType="Integer">
        select count(id) from se_order
    </select>

    <select id="queryOrderDetail" resultMap="cor1">
        select `product_name` , `order_status`, d.origin_price, `customer_name`, `order_staff`,
        `product_image`, `order_num`, `product_amount`, `order_notes`, `order_source`,
        d.`create_time`, `pay_time`,d.change_price
        from se_order,se_order_product as d
        where order_id=se_order.id and order_num=#{orderId}
    </select>

    <select id="queryOrderByKey" resultMap="cor1">
        select `product_name` , `order_status`, d.origin_price, `customer_name`, `order_staff`,
        `product_image`, `order_num`, `product_amount`, `order_notes`, `order_source`,
        d.`create_time`, `pay_time`,d.change_price
        from se_order,se_order_product as d
        where order_id=se_order.id
        <if test="orderType==0">
            and `order_status`=0
        </if>
        <if test="orderType==2">
            and `order_status`=2
        </if>
        <if test="keySearch != null">
            and product_name like "%" #{keySearch} "%"
        </if>
        order by se_order.id asc
    </select>

    <delete id="deleteOrder">
        delete from se_order where order_num = #{orderID}
    </delete>

    <delete id="deleteOrderWith">
        delete from se_order_product where order_id=(select id from se_order where order_num=#{orderID})
    </delete>

    <select id="queryOrderByCustomerID" resultMap="cor1">
        select `order_num`, `order_status`, se_order.received_amount, `order_staff`,
        `order_notes`, `pay_time`, `order_source`
        from se_order,se_order_product
        where order_id=se_order.id and customer_id=#{customerID}
    </select>



</mapper>